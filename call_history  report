# Copyright (c) 2023, Frappe Technologies and contributors
# For license information, please see license.txt

import frappe
from frappe import _
import re


def execute(filters):
	columns, data = get_columns(), get_data(filters)
	return columns, data

def get_data(filters):
	if not filters:
		data= frappe.db.sql(''' SELECT call_durations as duration ,call_type ,sum(calls) as calls,date from `tabCall History` group by call_type ''' ,as_dict=True)
		
		
	if filters.get('from_date') and filters.get('to_date'):
		data= frappe.db.sql(''' SELECT call_durations as duration ,call_type ,sum(calls) as calls ,date from `tabCall History` where date BETWEEN '{0}' and '{1}' group by call_type '''.format(filters.get("from_date"),filters.get("to_date")) ,as_dict=True)

	if filters.get('from_date') and filters.get('to_date') and filters.get('call_type'):
		if filters.get("call_type") == "Select All":
			data= frappe.db.sql(''' SELECT call_durations as duration ,call_type ,sum(calls)as calls from `tabCall History` where date BETWEEN '{0}'and '{1}' group by call_type '''.format(filters.get("from_date"),filters.get("to_date")),as_dict=True)

		else:
			data= frappe.db.sql(''' SELECT call_durations as duration ,call_type ,sum(calls)as calls from `tabCall History` where call_type = "{0}" and date BETWEEN '{1}'and '{2}' group by call_type '''.format(filters.get("call_type"),filters.get("from_date"),filters.get("to_date")),as_dict=True)

	if filters.get('from_date') and filters.get('to_date') and filters.get('mobile_number') and not filters.get('call_type'):
		print('3333333333333333333333')
		data = frappe.db.sql(f''' SELECT call_durations as duration ,call_type ,sum(calls) as calls from `tabCall History` where mobile_number_registration = "{filters.get('mobile_number')}" and date between "{filters.get('from_date')}" and "{filters.get('to_date')}" group by call_type ''',as_dict=1)
		
	elif filters.get('from_date') and filters.get('to_date') and filters.get('mobile_number') and filters.get('call_type'):
		print('-----------',filters)
		if filters.get("call_type") == "Select All":
			data = frappe.db.sql(f''' SELECT call_durations as duration ,call_type ,sum(calls) as calls from `tabCall History` where mobile_number_registration = "{filters.get('mobile_number')}" and date between "{filters.get('from_date')}" and "{filters.get('to_date')}" group by call_type ''',as_dict=1)

		else:
			data = frappe.db.sql(f''' SELECT call_durations as duration ,call_type ,sum(calls) as calls from `tabCall History` where mobile_number_registration = "{filters.get('mobile_number')}" and date between "{filters.get('from_date')}" and "{filters.get('to_date')}" and call_type = "{filters.get('call_type')}" group by call_type ''',as_dict=1)
		
	total_seconds = 0
	calls = 0		
	for  row in data:
		duration = row.get('duration')

		if row.get('calls'):

			calls += row.get('calls')
		
		hours_match = re.search(r'(\d+)h', str(duration))
		minutes_match = re.search(r'(\d+)m', str(duration))
		seconds_match = re.search(r'(\d+)s', str(duration))

		hours = int(hours_match.group(1)) if hours_match else 0
		minutes = int(minutes_match.group(1)) if minutes_match else 0
		seconds = int(seconds_match.group(1)) if seconds_match else 0

		total_seconds += hours * 3600 + minutes * 60 + seconds

	total_minutes, remaining_seconds = divmod(total_seconds, 60)
	total_hours, remaining_minutes = divmod(total_minutes, 60)

	tota_dict = {
		"duration":f"{total_hours}h {remaining_minutes}m {remaining_seconds}s",
		"call_type":"Total",
		"calls":calls
	}
	data.append(tota_dict)

	return data
		
